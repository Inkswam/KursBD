// <auto-generated />
using System;
using HotelManagementSystem.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace HotelManegmentSystem.Migrations
{
    [DbContext(typeof(HotelContext))]
    partial class HotelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("HotelManagementSystem.Models.Booking", b =>
                {
                    b.Property<int>("BookingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("booking_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("BookingId"));

                    b.Property<DateTime>("CheckInDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("check_in_date");

                    b.Property<DateTime>("CheckOutDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("check_out_date");

                    b.Property<int>("GuestId")
                        .HasColumnType("integer")
                        .HasColumnName("guest_id");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("room_number");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status");

                    b.HasKey("BookingId");

                    b.HasIndex("GuestId");

                    b.HasIndex("RoomNumber");

                    b.ToTable("booking");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Cleaning", b =>
                {
                    b.Property<int>("CleaningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("cleaning_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("CleaningId"));

                    b.Property<DateTime>("CleaningDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("cleaning_date");

                    b.Property<string>("CleaningTime")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cleaning_time");

                    b.Property<string>("CleaningType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("cleaning_type");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("room_number");

                    b.Property<int>("StaffId")
                        .HasColumnType("integer")
                        .HasColumnName("staff_id");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("status");

                    b.HasKey("CleaningId");

                    b.HasIndex("RoomNumber");

                    b.HasIndex("StaffId");

                    b.ToTable("cleaning");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Guest", b =>
                {
                    b.Property<int>("GuestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("guest_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("GuestId"));

                    b.Property<string>("ContactInfo")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("contact_info");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("full_name");

                    b.HasKey("GuestId");

                    b.ToTable("guest");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.OrderedService", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("order_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("OrderId"));

                    b.Property<int>("GuestId")
                        .HasColumnType("integer")
                        .HasColumnName("guest_id");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("order_date");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.Property<int>("ServiceId")
                        .HasColumnType("integer")
                        .HasColumnName("service_id");

                    b.HasKey("OrderId");

                    b.HasIndex("GuestId");

                    b.HasIndex("ServiceId");

                    b.ToTable("orderedservice");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("payment_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric")
                        .HasColumnName("amount");

                    b.Property<int>("BookingId")
                        .HasColumnType("integer")
                        .HasColumnName("booking_id");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("payment_date");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("payment_method");

                    b.HasKey("PaymentId");

                    b.HasIndex("BookingId");

                    b.ToTable("payment");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Room", b =>
                {
                    b.Property<string>("RoomNumber")
                        .HasColumnType("text")
                        .HasColumnName("room_number");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("category");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("numeric")
                        .HasColumnName("price_per_night");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)")
                        .HasColumnName("status");

                    b.HasKey("RoomNumber");

                    b.ToTable("room");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Service", b =>
                {
                    b.Property<int>("ServiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("service_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ServiceId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric(10,2)");

                    b.HasKey("ServiceId");

                    b.ToTable("service");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Staff", b =>
                {
                    b.Property<int>("StaffId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("staff_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("StaffId"));

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("full_name");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("position");

                    b.Property<string>("WorkSchedule")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("work_schedule");

                    b.HasKey("StaffId");

                    b.ToTable("staff");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Booking", b =>
                {
                    b.HasOne("HotelManagementSystem.Models.Guest", "Guest")
                        .WithMany("Bookings")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagementSystem.Models.Room", "Room")
                        .WithMany("Bookings")
                        .HasForeignKey("RoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Cleaning", b =>
                {
                    b.HasOne("HotelManagementSystem.Models.Room", "Room")
                        .WithMany("Cleanings")
                        .HasForeignKey("RoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagementSystem.Models.Staff", "Staff")
                        .WithMany("Cleanings")
                        .HasForeignKey("StaffId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Room");

                    b.Navigation("Staff");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.OrderedService", b =>
                {
                    b.HasOne("HotelManagementSystem.Models.Guest", "Guest")
                        .WithMany("OrderedServices")
                        .HasForeignKey("GuestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("HotelManagementSystem.Models.Service", "Service")
                        .WithMany("OrderedServices")
                        .HasForeignKey("ServiceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Guest");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Payment", b =>
                {
                    b.HasOne("HotelManagementSystem.Models.Booking", "Booking")
                        .WithMany("Payments")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Booking", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Guest", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("OrderedServices");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Room", b =>
                {
                    b.Navigation("Bookings");

                    b.Navigation("Cleanings");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Service", b =>
                {
                    b.Navigation("OrderedServices");
                });

            modelBuilder.Entity("HotelManagementSystem.Models.Staff", b =>
                {
                    b.Navigation("Cleanings");
                });
#pragma warning restore 612, 618
        }
    }
}
